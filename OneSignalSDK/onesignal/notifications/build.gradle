plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'org.jlleitschuh.gradle.ktlint'
}

android {
    compileSdkVersion rootProject.buildVersions.compileSdkVersion
    defaultConfig {
        minSdkVersion rootProject.buildVersions.minSdkVersion
        consumerProguardFiles "consumer-rules.pro"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        original {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
        }
        unity {
            minifyEnabled false
        }
    }
    testOptions {
        unitTests.all {
            maxParallelForks 1
            maxHeapSize '2048m'
        }
        unitTests {
            includeAndroidResources = true
        }
        unitTests.all {
            it.useJUnitPlatform()
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    namespace 'com.onesignal.notifications'

    kotlinOptions.freeCompilerArgs += ['-module-name', namespace]
}

tasks.withType(Test) {
    testLogging {
        exceptionFormat "full"
        events "started", "skipped", "passed", "failed"
        showStandardStreams false // Enable to have logging print
    }
}

ext {
    projectName = "OneSignal SDK Notifications"
    projectDescription = "OneSignal Android SDK - Notifications Module"
}

dependencies {
    compileOnly fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':OneSignal:core')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"
    implementation 'androidx.work:work-runtime-ktx:2.8.1'

    compileOnly('com.amazon.device:amazon-appstore-sdk:[3.0.1, 3.0.99]')

    // firebase-messaging:18.0.0 is the last version before going to AndroidX
    // firebase-messaging:19.0.0 is the first version using AndroidX
    // firebase-messaging:23.0.0 incoporates fix for SecurityException: Not allowed to bind to service
    api('com.google.firebase:firebase-messaging') {
        version {
            require '[21.0.0, 23.4.99]'
            prefer '23.4.0'
        }
    }

    // Huawei PushKit
    // KEEP as "compileOnly", so OneSignal isn't a direct dependency in the POM file.
    compileOnly "com.huawei.hms:push:$huaweiHMSPushVersion"

    api('androidx.work:work-runtime') {
        version {
            require '[2.1.0, 2.8.99]'
            prefer '2.8.1'
        }
    }

    testImplementation(project(':OneSignal:testhelpers'))

    testImplementation("io.kotest:kotest-runner-junit5:$kotestVersion")
    testImplementation("io.kotest:kotest-runner-junit5-jvm:$kotestVersion")
    testImplementation("io.kotest:kotest-assertions-core:$kotestVersion")
    testImplementation("io.kotest:kotest-property:$kotestVersion")
    testImplementation("org.robolectric:robolectric:4.8.1")
    // kotest-extensions-android allows Robolectric to work with Kotest via @RobolectricTest
    testImplementation("br.com.colman:kotest-extensions-android:0.1.1")
    testImplementation("androidx.test:core-ktx:1.4.0")
    testImplementation("androidx.test:core:1.4.0")
    testImplementation("io.mockk:mockk:1.13.2")
    testImplementation("org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion")

    // com.tdunning:json is needed for non-Robolectric tests.
    testImplementation("com.tdunning:json:$tdunningJsonForTest")
}

ktlint {
    version = "$ktlintVersion"
    additionalEditorconfig = [
        "max_line_length": "500",
    ]
}

apply from: '../maven-push.gradle'
