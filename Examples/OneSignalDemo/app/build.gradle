plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'org.jlleitschuh.gradle.ktlint'
}

android {
    namespace 'com.onesignal.sdktest'
    compileSdkVersion 34
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 34
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
        flavorDimensions "default"
    }

//    signingConfigs {
//        huawei {
//            storeFile file('SdkTest.jks')
//            keyAlias 'SdkTest'
//            keyPassword ''
//            storePassword ''
//            v1SigningEnabled true
//            v2SigningEnabled true
//        }
//    }

    productFlavors {
        gms {
            dimension "default"
            applicationId "com.onesignal.sdktest"
        }
        huawei {
            dimension "default"
            minSdkVersion 21
            applicationId "com.onesignal.sdktest"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
//            signingConfig null
//            productFlavors.huawei.signingConfig signingConfigs.huawei
            debuggable true
        }
    }

    testOptions {
        unitTests.all {
            maxParallelForks 1
            maxHeapSize '2048m'
        }
        unitTests {
            includeAndroidResources = true
        }
        unitTests.all {
            it.useJUnitPlatform()
        }
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }

    // Forced downgrade to Java 1.8 for compiling the application due to Android N error when building
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'androidsupportmultidexversion.txt'
    }

    task flavorSelection() {
        def tasksList = gradle.startParameter.taskRequests.toString()
        if (tasksList.contains('Gms')) {
            apply plugin: 'com.google.gms.google-services'
            googleServices { disableVersionCheck = true }
        } else if (tasksList.contains('Huawei')) {
            apply plugin: 'com.huawei.agconnect'
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'

    implementation 'com.google.android.material:material:1.7.0'
    implementation 'com.google.android.gms:play-services-location:21.0.0'

    implementation 'com.github.bumptech.glide:glide:4.12.0'

    /** START - Google Play Builds **/
    gmsImplementation('com.onesignal:OneSignal:5.1.36')
    /** END - Google Play Builds **/

    /** START - Huawei Builds **/
    // Omit Google / Firebase libraries for Huawei builds.
    huaweiImplementation('com.onesignal:OneSignal:5.1.36') {
        exclude group: 'com.google.android.gms', module: 'play-services-gcm'
        exclude group: 'com.google.android.gms', module: 'play-services-analytics'
        exclude group: 'com.google.android.gms', module: 'play-services-location'
        exclude group: 'com.google.firebase', module: 'firebase-messaging'
    }
    // Add HMS Push library
    huaweiImplementation 'com.huawei.hms:push:6.3.0.304'
    // Optionally add HMS location
    huaweiImplementation 'com.huawei.hms:location:4.0.0.300'
    /** END - Huawei Builds **/

    testImplementation(project(':OneSignal:testhelpers'))

    testImplementation("io.kotest:kotest-runner-junit5:$kotestVersion")
    testImplementation("io.kotest:kotest-runner-junit5-jvm:$kotestVersion")
    testImplementation("io.kotest:kotest-assertions-core:$kotestVersion")
    testImplementation("io.kotest:kotest-property:$kotestVersion")
    testImplementation("org.robolectric:robolectric:4.8.1")
    // kotest-extensions-android allows Robolectric to work with Kotest via @RobolectricTest
    testImplementation("br.com.colman:kotest-extensions-android:0.1.1")
    testImplementation("androidx.test:core-ktx:1.4.0")
    testImplementation("androidx.test:core:1.4.0")
    testImplementation("io.mockk:mockk:1.13.2")
    testImplementation("org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion")
    androidTestImplementation 'androidx.test:runner:1.7.0'
    androidTestUtil 'androidx.test:orchestrator:1.6.1'
}
